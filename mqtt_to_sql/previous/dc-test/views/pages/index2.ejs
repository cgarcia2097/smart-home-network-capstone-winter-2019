<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Crossfilter&Dc Page Template</title>
        <!-- <link rel="stylesheet" href="/css/style.css"> -->
        <link rel="stylesheet" type="text/css" href="/dc/dc.css" media="screen" />
        <!-- <script type="text/javascript" src="https://d3js.org/d3.v4.min.js"></script> -->
       <script type="text/javascript" src="/crossfilter-master/crossfilter.js"></script>
       <script type="text/javascript" src="javascripts/d3.js"></script>
        <script type="text/javascript" src="/dc/dc.js"></script>
        <script type="text/javascript" src="/javascripts/messing-around2.js"></script>
       <script src="/javascripts/jquery.js" type="text/javascript"></script>
</head>
    <body>
<div id="chart-ring-day"></div>
<div id="chart-line-hitsperday"></div>
<div style='clear:both;'>
		<table id="dc-data-table">
			<thead>
			<tr class="header">
				<th>Day</th>
				<th>Sensor1</th>
				<th>Sensor2</th>
			</tr>
			</thead>
		</table>
</div>
 		<script type="text/javascript">
	var ndx = crossfilter(data);
	//var parseDate = d3.timeParse("%m/%d/%Y");
	var parseDate = d3.time.format("%m/%d/%Y").parse;//time format
	data.forEach(function(d){
		d.date = parseDate(d.date);
		d.total = d.sensor1+d.sensor2;
		d.Day = d.date.getDay();
	});
	function print_filter(filter){
	var f=eval(filter);
	if (typeof(f.length) != "undefined") {}else{}
	if (typeof(f.top) != "undefined") {f=f.top(Infinity);}else{}
	if (typeof(f.dimension) != "undefined") {f=f.dimension(function(d) { return "";}).top(Infinity);}else{}
	console.log(filter+"("+f.length+") = "+JSON.stringify(f).replace("[","[\n\t").replace(/}\,/g,"},\n\t").replace("]","\n]"));
	}
	print_filter("data");
	var dateDim = ndx.dimension( function(d) { return d.date; });
	var hits = dateDim.group().reduceSum(dc.pluck('total'));
	var minDate = dateDim.bottom(1)[0].date;
	var maxDate = dateDim.top(1)[0].date;
	var hitslineChart = dc.lineChart("#chart-line-hitsperday");
	var status_sensor1=dateDim.group().reduceSum(function(d) {return d.sensor1;});
	var status_sensor2=dateDim.group().reduceSum(function(d) {return d.sensor2;});
	hitslineChart.width(1000).height(400).dimension(dateDim)
	.group(status_sensor2,"ayylmao2").stack(status_sensor1,"ayylmao1").renderArea(true).x(d3.time.scale().domain([minDate,maxDate])).brushOn(false).legend(dc.legend().x(50).y(20).itemHeight(13).gap(5)).yAxisLabel("Values per day");
	var dayDim = ndx.dimension(function(d){return +d.Day;});
	var day_total = dayDim.group().reduceSum(function(d){return d.total;});
	var dayRingChart = dc.pieChart("#chart-ring-day");
	dayRingChart.width(150).height(150).dimension(dayDim).group(day_total).innerRadius(30);
	var datatable   = dc.dataTable("#dc-data-table");
	datatable
    	.dimension(dateDim)
    	.group(function(d) {return d.Day;})
    	// dynamic columns creation using an array of closures
   	 .columns([
        	function(d) { return d.date.getDate() + "/" + (d.date.getMonth() + 1) + "/" + d.date.getDay(); },
        	function(d) {return d.sensor1;},
        	function(d) {return d.sensor2;},
    ]);
	dc.renderAll();

  </script>
    </body>
</html>
